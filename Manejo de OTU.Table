#####################################################################################################
############################            Modificaciones Utiles             ###########################
############################    Laboratorio de Microbiologia Marina UC    ###########################
######   3.2.1   #######################################################################   BG2017  ##

# No requiere librerias, solo el base de R

#####################################################################################################

#Funcion para relativizar los reads de una tabla de OTU's por muestra.

rltv.Otu.Table <- function(x){
x.Data.rltv <- NULL
for (i in 1:dim(x)[1]) {
 x.Data.rltv <- rbind(x.Data.rltv, x[i,]/apply(x, 1, function(x) sum(x))[i])
}
rownames(x.Data.rltv) <- rownames(x)
invisible(x.Data.rltv)
}                                                                      

#Funcion para asignar taxonomia a una OTU.Table y juntar los reads de taxas iguales 
Tax.sum <- function(OTU.Table, Tax.Table, Tax.lvl ){
  z <- NULL
  y <- NULL
  for (i in 1:length(unique(Tax.Table[colnames(OTU.Table),Tax.lvl]))) {    #El ciclo suma las columnas con igual asignacion y conserva las columnas con asignacion unica 
    if (length(OTU.Table[,which(Tax.Table[colnames(OTU.Table),Tax.lvl]==unique(Tax.Table[colnames(OTU.Table),Tax.lvl])[i])])!=length(rownames(OTU.Table))) {
      z <- which(Tax.Table[colnames(OTU.Table),Tax.lvl]==unique(Tax.Table[colnames(OTU.Table),Tax.lvl])[i])
      y <- cbind(y, apply(OTU.Table[,which(Tax.Table[colnames(OTU.Table),Tax.lvl]==unique(Tax.Table[colnames(OTU.Table),Tax.lvl])[i])], 1, function(x) sum(x)))
    } else { 
      y <- cbind(y, OTU.Table[,which(Tax.Table[colnames(OTU.Table),Tax.lvl]==unique(Tax.Table[colnames(OTU.Table),Tax.lvl])[i])])
    }
  }
  colnames(y) <- unique(Tax.Table[colnames(OTU.Table),Tax.lvl])            #Coloca losnombres de las columnas en la nueva OTU.Table 
  invisible((y))
}

#Fin
